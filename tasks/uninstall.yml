---
- name: "Get service facts"
  ansible.builtin.service_facts:

- name: "Stop postfix"
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
  when: item in services and (services[item]['status'] is not defined or services[item]['status'] != 'not-found')
  with_items: ['postfix', 'postfix.service']

- name: "Ensure postfix is removed (apt)"
  ansible.builtin.apt:
    name:
      - postfix
      - mailutils
    state: absent
  when: ansible_pkg_mgr == "apt"

- name: "Remove postfix main.cf"
  ansible.builtin.file:
    path: "{{ postfix_config_file }}"
    state: absent

- name: "Check if mailutils.conf exists"
  ansible.builtin.stat:
    path: "{{ postfix_mailutils_config_file }}"
  register: mailutils_conf

- name: "Get expected mailutils.conf contents"
  ansible.builtin.set_fact:
    rendered_template: "{{ lookup('template', './mailutils.conf') }}"

- name: "Get mailutils.conf contents"
  ansible.builtin.command: "cat {{ postfix_mailutils_config_file }}"
  register: mailtutils_contents
  changed_when: false
  when: mailutils_conf.stat.exists

- name: "Remove empty mailutils.conf"
  ansible.builtin.file:
    path: "{{ postfix_mailutils_config_file }}"
    state: absent
  when: mailutils_conf.stat.exists and mailtutils_contents.stdout | trim == rendered_template | trim
